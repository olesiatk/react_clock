{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","setInterval","setState","prevProps","name","this","props","console","log","toLocaleTimeString","React","Component","App","isClockVisible","clockName","Math","floor","random","hideClock","showClock","visibility","hide","show","className","classNames","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uNA2CeA,E,4MAnCbC,MAAQ,CACNC,KAAM,IAAIC,M,kEAGS,IAAD,OAClBC,aAAY,WACV,EAAKC,SAAS,CAAEH,KAAM,IAAIC,SACzB,O,yCAGcG,GACbA,EAAUC,OAASC,KAAKC,MAAMF,MAEhCG,QAAQC,IAAR,8CACIL,EAAUC,KADd,eACyBC,KAAKC,MAAMF,S,6BAIjCA,GAAO,IACJL,EAASM,KAAKP,MAAdC,KAER,OACE,oCACE,8BACGA,EAAKU,sBAER,8BACG,IACAL,Q,GAjCSM,IAAMC,WC0DXC,G,kNAtDbd,MAAQ,CACNe,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,W,EAc7BC,UAAY,WACV,EAAKhB,SAAS,CAAEW,gBAAgB,K,EAGlCM,UAAY,WACV,EAAKjB,SAAS,CAAEW,gBAAgB,K,kEAhBb,IAAD,OAClBZ,aAAY,WACV,IAAMF,EAAO,IAAIC,KAEb,EAAKF,MAAMe,gBAEfN,QAAQC,IAAIT,EAAKU,wBAEhB,O,+BAWK,IAAD,OACDW,EAAaf,KAAKP,MAAMe,eACxBQ,EAAOhB,KAAKa,UACZI,EAAOjB,KAAKc,UAElB,OACE,yBAAKI,UAAU,OACb,2CACA,uBACEA,UAAWC,IAAW,CAAE,qBAAsBJ,KADhD,gBAIG,IACD,8BAAM,kBAAC,EAAD,CAAOhB,KAAMC,KAAKP,MAAMgB,cAEhC,4BAAQW,KAAK,SAASC,QAASJ,GAA/B,cACA,4BAAQG,KAAK,SAASC,QAASL,GAA/B,cACA,4BACEI,KAAK,SACLC,QAAS,kBAAO,EAAKxB,SAAS,CAC5BY,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,cAH/B,wB,GA1CUP,IAAMC,YCFxBgB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.36725ba8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  static propTypes = {\n    name: PropTypes.number.isRequired,\n  };\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from\n        ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  render(name) {\n    const { date } = this.state;\n\n    return (\n      <>\n        <span>\n          {date.toLocaleTimeString()}\n        </span>\n        <span>\n          {' '}\n          {name}\n        </span>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 10),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      const date = new Date();\n\n      if (this.state.isClockVisible) {\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n      }\n    }, 1000);\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  render() {\n    const visibility = this.state.isClockVisible;\n    const hide = this.hideClock;\n    const show = this.showClock;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p\n          className={classNames({ 'App__clock-hidden': !visibility })}\n        >\n          Current time:\n          {' '}\n          <span><Clock name={this.state.clockName} /></span>\n        </p>\n        <button type=\"button\" onClick={show}>Show clock</button>\n        <button type=\"button\" onClick={hide}>Hide clock</button>\n        <button\n          type=\"button\"\n          onClick={() => (this.setState({\n            clockName: Math.floor(Math.random() * 10),\n          }))}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}